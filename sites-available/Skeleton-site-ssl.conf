server {

    listen 443 ssl spdy deferred;
    listen [::]:443 ssl spdy deferred ipv6only=on;

    server_name @@SITE_DOMAIN@@;

    # Path for static files
    root /home/@@SITE_USER@@/website/html;

    # Logging
    #access_log /home/@@SITE_USER@@/log/@@SITE_USER@@-access.log main;
    #error_log  /home/@@SITE_USER@@/log/@@SITE_USER@@-error.log notice;
    access_log /var/log/nginx/@@SITE_DOMAIN@@-access.log main;
    error_log  /var/log/nginx/@@SITE_DOMAIN@@-error.log notice;

    # User config / incron
    #include /home/@@SITE_USER@@/website/nginx.conf;

    # Specify a charset
    charset utf-8;

    # Index files
    index index.php index.html index.htm;

    # Custom 404 page
    #error_page 404 /404.html;

    include h5bp/basic.conf;
    include h5bp/directive-only/cache-file-descriptors.conf;

    # SSL
    include h5bp/directive-only/ssl.conf;

    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
    # This default SSL certificate will be served whenever the client lacks support for SNI (Server Name Indication).
    # Make it a symlink to the most important certificate you have, so that users of IE 8 and below on WinXP can see your main site without SSL errors.
    ssl_certificate      /etc/nginx/ssl/@@SITE_DOMAIN@@-public.pem;
    ssl_certificate_key  /etc/nginx/ssl/@@SITE_DOMAIN@@-private.key;

    # Consider using OCSP Stapling as shown in
    include h5bp/directive-only/ssl-stapling.conf;

    # SPDY support
    include h5bp/directive-only/spdy.conf;

    # "nginx first searches for the most specific prefix location
    #  given by literal strings regardless of the listed order"
    location = /favicon.ico {
        access_log off;
    }
    location = /apple-touch-icon.png {
        access_log off;
    }
    location = /apple-touch-icon-precomposed.png {
        access_log off;
    }

    # Allow even for password protected sites
    location = /robots.txt {
        allow all;
        try_files $uri $uri/ /index.php?$args;
    }

    location / {
        location ~ "sitemap.*\.xml$" {
            try_files $uri $uri/ /index.php?$args;
        }
        location ~ "sitemap.*\.xsl$" {
            try_files $uri $uri/ /index.php?$args;
        }
        # Include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ "\.php$" {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php5-fpm-@@SITE_USER@@.sock;
        # For 404 and wpf2b
        fastcgi_intercept_errors on;
        # FastCGI cache
        fastcgi_cache @@CACHEZONE@@;
        fastcgi_cache_valid 200 10m;
        fastcgi_cache_bypass $query_string $http_pragma;
        fastcgi_no_cache $query_string $http_pragma;
        add_header X-Fastcgi-Cache $upstream_cache_status;
    }
}

# REDIRECT
server {
    listen [::]:80;
    listen 80;
    server_name @@SITE_DOMAIN@@ www.@@SITE_DOMAIN@@;
    # http -> https
    return 301 https://@@SITE_DOMAIN@@$request_uri;
}
server {
    listen [::]:443 ssl spdy;
    listen 443 ssl spdy;
    server_name www.@@SITE_DOMAIN@@;
    include h5bp/directive-only/ssl.conf;
    # www -> non-www
    return 301 https://@@SITE_DOMAIN@@$request_uri;
}
